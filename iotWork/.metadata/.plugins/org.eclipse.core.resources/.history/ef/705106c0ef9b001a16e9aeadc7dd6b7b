package can.basic;

import java.io.OutputStream;
import java.util.TooManyListenersException;

import gnu.io.SerialPort;

public class CANReadWriteTest {
	SerialConnect serialConnect;//CAN시리얼포트 연결
	OutputStream out;//CAN과 output통신할 스트림
	public CANReadWriteTest(String portName) {
		serialConnect = new SerialConnect();
		serialConnect.connect(portName, this.getClass().getName());
		
		//input, output작업을 하기 위해 리스너를 port에 연결
		SerialPort commPort = (SerialPort)serialConnect.getCommPort();
		SerialListener listener = new SerialListener(serialConnect.getBis());
		try {
			commPort.addEventListener(listener);
			commPort.notifyOnDataAvailable(true);
		} catch (TooManyListenersException e) {
			e.printStackTrace();
		}
		//output스트림 얻기
		out = serialConnect.getOut();
	}
	class CANWriteThread implements Runnable{
		String data;
		//쓰레드 수신 가능하게 생성자 만들기!
		CANWriteThread(){
			this.data = ":G11A9\r";
		}
		//msg = msg의 id + 데이터
		public void convert_data(String msg) {
			msg = msg.toUpperCase();//메시지를 대문자로 변환
			msg = "W28"+msg; //송신데이터의 구분기호를 추가
			//실제로는 다 붙어있음!
			//msg W28 00000000 0000000000000000
			//데이터프레임에 대한 체크섬을 생성 - 앞뒤문자 빼고 나머지를 더한 후 0xff로 &연산
			String data = "W28000000000000000000000000";
			char[] data_arr = data.toCharArray();
			int sum=0;
			for (int i = 0; i < data_arr.length; i++) {
				System.out.println(data_arr[i]);
				sum = sum + data_arr[i];
			}
			sum = (sum&0xff);
		}
		@Override
		public void run() {
			
		}
		
	}
	public static void main(String[] args) {
		
	}
}
